{
	"info": {
		"_postman_id": "fc63e247-4bdc-4f5c-a905-46b321ae0699",
		"name": "Breadth-First Search",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HTML",
			"item": [
				{
					"name": "Home",
					"item": [
						{
							"name": "http://localhost:3000/",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e46ad29-869a-4d38-977f-372137af5e79",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(pm.environment.get(\"homeHtml\"));",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "text/html",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										""
									]
								},
								"description": "Home"
							},
							"response": [
								{
									"name": "Default",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost:3000/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												""
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Graphs",
					"item": [
						{
							"name": "http://localhost:3000/graphs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3e8a025-dfcb-4ccd-829d-3818299c6740",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"graphsHtml\"));",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "text/html",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/graphs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs"
									]
								},
								"description": "Graphs"
							},
							"response": [
								{
									"name": "Default",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost:3000/graphs",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"graphs"
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "http://localhost:3000/graphs/id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fcd6471-67cf-449e-90c4-8e50c910ec71",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(pm.environment.get(\"showGraphHtml\"));",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "text/html"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "text/html"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/graphs/1544123991580_090b5d19-73aa-45a7-b95d-0d2b480d9bbb_7_8",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs",
										"1544123991580_090b5d19-73aa-45a7-b95d-0d2b480d9bbb_7_8"
									]
								},
								"description": "Show Graph"
							},
							"response": [
								{
									"name": "Default",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost:3000/graphs/id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"graphs",
												"id"
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "http://localhost:3000/graphs invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "995af237-ef7e-48fe-aa53-30e90097afe1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"postGraphsHtmlInvalid\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"teste\", \"links\":[{\"id\":\"asdf\"}], \"nodes\":[{\"teste\":\"string\"}]}"
								},
								"url": {
									"raw": "http://localhost:3000/graphs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://localhost:3000/graphs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf9c31ce-43ec-484d-bee4-173248218d7b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"postGraphsHtml\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "text/html",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"090b5d19-73aa-45a7-b95d-0d2b480d9bbb\",\"offsetX\":48.01944509627987,\"offsetY\":102.11131657647991,\"zoom\":84.98333333333322,\"gridSize\":0,\"links\":[{\"id\":\"0dd1b1e8-406e-46e1-b198-85602f8824eb\",\"type\":\"link\",\"selected\":false,\"source\":\"ab77c121-b415-4ecc-9c30-9f65662d9d56\",\"sourcePort\":\"a7f23ac5-bb6e-4066-b897-826ab9de7e11\",\"target\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"targetPort\":\"7dbe5c86-6ccd-481c-8acf-7b290ee19c41\",\"points\":[{\"id\":\"9abc21c4-4163-4abf-9086-bc8741d73c8c\",\"selected\":false,\"x\":173.703125,\"y\":48.296875},{\"id\":\"3181672b-3057-4f57-921d-42048e6daaaa\",\"selected\":false,\"x\":149,\"y\":215.4476367915278}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#01a3ce\",\"curvyness\":150},{\"id\":\"8879d879-0c8c-4094-b864-348bf47c2ecc\",\"type\":\"link\",\"selected\":false,\"source\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"sourcePort\":\"c211e419-8498-4876-972d-8107961bcbd9\",\"target\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"targetPort\":\"c0aee519-2e9f-4fbb-ab16-928db701e0e9\",\"points\":[{\"id\":\"30db9ab6-180a-45b3-ade2-7b10a038191c\",\"selected\":false,\"x\":350.70312740781117,\"y\":261.7445091112514},{\"id\":\"5009da24-0b7b-408b-8005-e3e49f3cfa10\",\"selected\":false,\"x\":425.8222093424822,\"y\":26.329776281914974}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#4a821c\",\"curvyness\":150},{\"id\":\"faf9e674-58ca-4832-979f-8ba976831807\",\"type\":\"link\",\"selected\":false,\"source\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"sourcePort\":\"54dd40e7-8720-4aab-9e80-9470aa5934e2\",\"target\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"targetPort\":\"ed953688-3b1d-4e93-bcab-d7fc8459e113\",\"points\":[{\"id\":\"aa1ffb08-223c-4c1a-ab8d-a6af26b41503\",\"selected\":false,\"x\":350.70312740781117,\"y\":307.7445170975937},{\"id\":\"d0ee013c-20f4-4e59-ae97-e0fa6cab8248\",\"selected\":false,\"x\":448.50298019909366,\"y\":424.0475129915275}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#ff3750\",\"curvyness\":150},{\"id\":\"4c565e08-9636-46bd-b6c9-108470fa44f2\",\"type\":\"link\",\"selected\":false,\"source\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"sourcePort\":\"353083bc-2ac6-4819-8a58-30a4f2f423bd\",\"target\":\"5a733cdd-ffd9-46da-93e2-e9511e22bbca\",\"targetPort\":\"eb016879-8d5f-49c9-ba6c-f63b73bc429e\",\"points\":[{\"id\":\"8d3704be-d0d1-4a1f-9255-6e3af60bbcbc\",\"selected\":false,\"x\":627.5253042544024,\"y\":67.37665597156948},{\"id\":\"3b838009-94c4-429d-a1c1-4ea2bb20d880\",\"selected\":false,\"x\":745.5006773465954,\"y\":-43.766274109675905}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#362a18\",\"curvyness\":150},{\"id\":\"d4502b7c-f646-4358-ab84-dd6d753f53a2\",\"type\":\"link\",\"selected\":false,\"source\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"sourcePort\":\"379f9e63-bf38-461a-b633-f2f9ef940909\",\"target\":\"950a90a2-1c57-471b-b9d4-5c47fa01bc9b\",\"targetPort\":\"0c041374-1425-4ad6-8da8-2d2cbb7bc6a3\",\"points\":[{\"id\":\"a711477c-4855-4df5-b041-6e6e094a534e\",\"selected\":false,\"x\":627.5253042544024,\"y\":102.87665532151837},{\"id\":\"e6be6920-0413-4db9-9a12-2f89a2657559\",\"selected\":false,\"x\":758.0767983318797,\"y\":214.00410606064517}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#90875B\",\"curvyness\":150},{\"id\":\"44063c78-1ffa-461b-a2e8-573998d2a34d\",\"type\":\"link\",\"selected\":false,\"source\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"sourcePort\":\"be218528-1266-49e5-8f2e-643e9a6f30ad\",\"target\":\"5128d8eb-dcec-4a07-aa2e-43f0933ea85b\",\"targetPort\":\"bbcf07f1-92a5-4f32-b553-558dcd975212\",\"points\":[{\"id\":\"5c463587-6e04-4ebe-8ccd-3e09746aa5ab\",\"selected\":false,\"x\":650.2187511077093,\"y\":465.0937484340972},{\"id\":\"55dc78bc-ad93-46e2-aa0d-f472f350b45a\",\"selected\":true,\"x\":774.3125213521583,\"y\":389.8750108779327}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#362a18\",\"curvyness\":150},{\"id\":\"fd47e2a8-ada9-45f2-89c0-5e7a352e9a02\",\"type\":\"link\",\"selected\":false,\"source\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"sourcePort\":\"75b632b3-1741-4656-90a2-0e48e49604b0\",\"target\":\"17fc37be-46cc-47f4-a041-ee14d984a7a9\",\"targetPort\":\"b5a03f4c-a2f8-43c6-bf6a-3e319c0652d3\",\"points\":[{\"id\":\"569b056e-3222-4c35-9f2a-2f926a749c48\",\"selected\":false,\"x\":650.2187511077093,\"y\":500.59378260821285},{\"id\":\"c2d6e89b-4528-49a5-b63e-7b01de841e7b\",\"selected\":true,\"x\":777.7343439766115,\"y\":558.7500017772173}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#90875B\",\"curvyness\":150}],\"nodes\":[{\"id\":\"ab77c121-b415-4ecc-9c30-9f65662d9d56\",\"type\":\"start\",\"selected\":false,\"x\":0,\"y\":0,\"extras\":{\"title\":\"Start\"},\"ports\":[{\"id\":\"a7f23ac5-bb6e-4066-b897-826ab9de7e11\",\"type\":\"start\",\"selected\":false,\"name\":\"out\",\"parentNode\":\"ab77c121-b415-4ecc-9c30-9f65662d9d56\",\"links\":[\"0dd1b1e8-406e-46e1-b198-85602f8824eb\"],\"maximumLinks\":1,\"position\":\"out\",\"color\":\"#01a3ce\"}]},{\"id\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"type\":\"request\",\"selected\":false,\"x\":149,\"y\":197.9476367915278,\"extras\":{\"title\":\"Request\",\"request\":{\"port\":\"\",\"url\":\"\",\"method\":\"\",\"headers\":\"\",\"body\":\"\"},\"url\":\"http://www.zup.com.br/\",\"port\":\"80\",\"method\":\"GET\"},\"ports\":[{\"id\":\"7dbe5c86-6ccd-481c-8acf-7b290ee19c41\",\"type\":\"request\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"links\":[\"0dd1b1e8-406e-46e1-b198-85602f8824eb\"],\"position\":\"in\",\"color\":\"#246fc5\"},{\"id\":\"c211e419-8498-4876-972d-8107961bcbd9\",\"type\":\"request\",\"selected\":false,\"name\":\"yes\",\"parentNode\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"links\":[\"8879d879-0c8c-4094-b864-348bf47c2ecc\"],\"maximumLinks\":1,\"position\":\"yes\",\"color\":\"#4a821c\"},{\"id\":\"54dd40e7-8720-4aab-9e80-9470aa5934e2\",\"type\":\"request\",\"selected\":false,\"name\":\"no\",\"parentNode\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"links\":[\"faf9e674-58ca-4832-979f-8ba976831807\"],\"maximumLinks\":1,\"position\":\"no\",\"color\":\"#ff3750\"}]},{\"id\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"type\":\"conditional\",\"selected\":false,\"x\":448.51608786336857,\"y\":406.56180083985294,\"extras\":{\"title\":\"Conditional\",\"description\":\"Does the user match all of the following conditions?\",\"conditions\":[{\"id\":1,\"left\":\"3\",\"compare\":\"equal\",\"right\":\"3\"}],\"default\":{\"color\":\"#90875B\"}},\"ports\":[{\"id\":\"ed953688-3b1d-4e93-bcab-d7fc8459e113\",\"type\":\"conditional\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"links\":[\"faf9e674-58ca-4832-979f-8ba976831807\"],\"position\":\"in\",\"color\":\"#246fc5\"},{\"id\":\"be218528-1266-49e5-8f2e-643e9a6f30ad\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-1\",\"parentNode\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"links\":[\"44063c78-1ffa-461b-a2e8-573998d2a34d\"],\"maximumLinks\":1,\"position\":\"out-1\",\"color\":\"#362a18\"},{\"id\":\"75b632b3-1741-4656-90a2-0e48e49604b0\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-default\",\"parentNode\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"links\":[\"fd47e2a8-ada9-45f2-89c0-5e7a352e9a02\"],\"maximumLinks\":1,\"position\":\"out-default\",\"color\":\"#90875B\"}]},{\"id\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"type\":\"conditional\",\"selected\":false,\"x\":425.82387819229535,\"y\":8.830912661259731,\"extras\":{\"title\":\"Conditional\",\"description\":\"Does the user match all of the following conditions?\",\"conditions\":[{\"id\":1,\"left\":\"1\",\"compare\":\"equal\",\"right\":\"2\"}],\"default\":{\"color\":\"#90875B\"}},\"ports\":[{\"id\":\"c0aee519-2e9f-4fbb-ab16-928db701e0e9\",\"type\":\"conditional\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"links\":[\"8879d879-0c8c-4094-b864-348bf47c2ecc\"],\"position\":\"in\",\"color\":\"#246fc5\"},{\"id\":\"353083bc-2ac6-4819-8a58-30a4f2f423bd\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-1\",\"parentNode\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"links\":[\"4c565e08-9636-46bd-b6c9-108470fa44f2\"],\"maximumLinks\":1,\"position\":\"out-1\",\"color\":\"#362a18\"},{\"id\":\"379f9e63-bf38-461a-b633-f2f9ef940909\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-default\",\"parentNode\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"links\":[\"d4502b7c-f646-4358-ab84-dd6d753f53a2\"],\"maximumLinks\":1,\"position\":\"out-default\",\"color\":\"#90875B\"}]},{\"id\":\"5a733cdd-ffd9-46da-93e2-e9511e22bbca\",\"type\":\"createJSON\",\"selected\":false,\"x\":745.5031753813028,\"y\":-61.27664496903435,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"eb016879-8d5f-49c9-ba6c-f63b73bc429e\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"5a733cdd-ffd9-46da-93e2-e9511e22bbca\",\"links\":[\"4c565e08-9636-46bd-b6c9-108470fa44f2\"],\"position\":\"in\",\"color\":\"green\"}]},{\"id\":\"950a90a2-1c57-471b-b9d4-5c47fa01bc9b\",\"type\":\"createJSON\",\"selected\":false,\"x\":758.0902668284818,\"y\":196.50844496429417,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"0c041374-1425-4ad6-8da8-2d2cbb7bc6a3\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"950a90a2-1c57-471b-b9d4-5c47fa01bc9b\",\"links\":[\"d4502b7c-f646-4358-ab84-dd6d753f53a2\"],\"position\":\"in\",\"color\":\"green\"}]},{\"id\":\"5128d8eb-dcec-4a07-aa2e-43f0933ea85b\",\"type\":\"createJSON\",\"selected\":false,\"x\":774.3166306038344,\"y\":372.3753210451779,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"bbcf07f1-92a5-4f32-b553-558dcd975212\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"5128d8eb-dcec-4a07-aa2e-43f0933ea85b\",\"links\":[\"44063c78-1ffa-461b-a2e8-573998d2a34d\"],\"position\":\"in\",\"color\":\"green\"}]},{\"id\":\"17fc37be-46cc-47f4-a041-ee14d984a7a9\",\"type\":\"createJSON\",\"selected\":false,\"x\":777.7399854916243,\"y\":541.2608288428197,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"b5a03f4c-a2f8-43c6-bf6a-3e319c0652d3\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"17fc37be-46cc-47f4-a041-ee14d984a7a9\",\"links\":[\"fd47e2a8-ada9-45f2-89c0-5e7a352e9a02\"],\"position\":\"in\",\"color\":\"green\"}]}],\"isCanvasMoving\":false}"
								},
								"url": {
									"raw": "http://localhost:3000/graphs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Upload",
					"item": [
						{
							"name": "http://localhost:3000/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dce61fd-7a96-442c-9ec3-9da58b90ce9f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"uploadHtml\"));",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "text/html",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/upload",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"upload"
									]
								},
								"description": "Upload an graph"
							},
							"response": [
								{
									"name": "Default",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost:3000/upload",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"upload"
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Sample",
					"item": [
						{
							"name": "http://localhost:3000/sample",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d6dd38a-1850-487d-88d1-10bdb09b621d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"sampleHtml\"));",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "text/html",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/sample",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"sample"
									]
								},
								"description": "Upload an graph"
							},
							"response": [
								{
									"name": "Default",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost:3000/upload",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"upload"
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Not Found",
					"item": [
						{
							"name": "http://localhost:3000/notfound",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33843511-6877-426c-853d-b1691ec76612",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(pm.environment.get(\"notFoundHtml\"));",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/notfound",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"notfound"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a67032d1-b760-41a5-9bda-d40af12dfb76",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7c99404e-8f54-47fb-b8eb-dfa24881f6ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "JSON",
			"item": [
				{
					"name": "Home",
					"item": [
						{
							"name": "http://localhost:3000/",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b821ef3-fef2-4f60-bdd1-c92419675e5a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"var schema = { \"message\": \"Nothing to show here\" }",
											"pm.test(\"JSON body equals to\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.eql(schema);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Graphs",
					"item": [
						{
							"name": "http://localhost:3000/graphs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e732cc26-9e54-4d68-b6a7-b6be0911bd2b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"JSON body has graphs and message\", function () {",
											"    pm.response.to.have.jsonBody(\"graphs\");",
											"    pm.response.to.have.jsonBody(\"message\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/graphs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://localhost:3000/graphs/id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e732cc26-9e54-4d68-b6a7-b6be0911bd2b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"JSON body has file and sequence\", function () {",
											"    pm.response.to.have.jsonBody(\"file\");",
											"    pm.response.to.have.jsonBody(\"sequence\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/graphs/1544123991580_090b5d19-73aa-45a7-b95d-0d2b480d9bbb_7_8",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs",
										"1544123991580_090b5d19-73aa-45a7-b95d-0d2b480d9bbb_7_8"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://localhost:3000/graphs invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "995af237-ef7e-48fe-aa53-30e90097afe1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"var schema = {",
											"    \"message\": [",
											"        \"json not valid\",",
											"        \"link has no property source\",",
											"        \"link has no property target\",",
											"        \"nodes has no property id\",",
											"        \"nodes has no ports property\",",
											"        \"Please send an JSON on body request\"",
											"    ]",
											"};",
											"pm.test(\"Errors message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.eql(schema);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"teste\", \"links\":[{\"id\":\"asdf\"}], \"nodes\":[{\"teste\":\"string\"}]}"
								},
								"url": {
									"raw": "http://localhost:3000/graphs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://localhost:3000/graphs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf9c31ce-43ec-484d-bee4-173248218d7b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eql(\"090b5d19-73aa-45a7-b95d-0d2b480d9bbb\");",
											"    pm.expect(jsonData.message).to.eql(\"File upload sucess\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"090b5d19-73aa-45a7-b95d-0d2b480d9bbb\",\"offsetX\":48.01944509627987,\"offsetY\":102.11131657647991,\"zoom\":84.98333333333322,\"gridSize\":0,\"links\":[{\"id\":\"0dd1b1e8-406e-46e1-b198-85602f8824eb\",\"type\":\"link\",\"selected\":false,\"source\":\"ab77c121-b415-4ecc-9c30-9f65662d9d56\",\"sourcePort\":\"a7f23ac5-bb6e-4066-b897-826ab9de7e11\",\"target\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"targetPort\":\"7dbe5c86-6ccd-481c-8acf-7b290ee19c41\",\"points\":[{\"id\":\"9abc21c4-4163-4abf-9086-bc8741d73c8c\",\"selected\":false,\"x\":173.703125,\"y\":48.296875},{\"id\":\"3181672b-3057-4f57-921d-42048e6daaaa\",\"selected\":false,\"x\":149,\"y\":215.4476367915278}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#01a3ce\",\"curvyness\":150},{\"id\":\"8879d879-0c8c-4094-b864-348bf47c2ecc\",\"type\":\"link\",\"selected\":false,\"source\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"sourcePort\":\"c211e419-8498-4876-972d-8107961bcbd9\",\"target\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"targetPort\":\"c0aee519-2e9f-4fbb-ab16-928db701e0e9\",\"points\":[{\"id\":\"30db9ab6-180a-45b3-ade2-7b10a038191c\",\"selected\":false,\"x\":350.70312740781117,\"y\":261.7445091112514},{\"id\":\"5009da24-0b7b-408b-8005-e3e49f3cfa10\",\"selected\":false,\"x\":425.8222093424822,\"y\":26.329776281914974}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#4a821c\",\"curvyness\":150},{\"id\":\"faf9e674-58ca-4832-979f-8ba976831807\",\"type\":\"link\",\"selected\":false,\"source\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"sourcePort\":\"54dd40e7-8720-4aab-9e80-9470aa5934e2\",\"target\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"targetPort\":\"ed953688-3b1d-4e93-bcab-d7fc8459e113\",\"points\":[{\"id\":\"aa1ffb08-223c-4c1a-ab8d-a6af26b41503\",\"selected\":false,\"x\":350.70312740781117,\"y\":307.7445170975937},{\"id\":\"d0ee013c-20f4-4e59-ae97-e0fa6cab8248\",\"selected\":false,\"x\":448.50298019909366,\"y\":424.0475129915275}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#ff3750\",\"curvyness\":150},{\"id\":\"4c565e08-9636-46bd-b6c9-108470fa44f2\",\"type\":\"link\",\"selected\":false,\"source\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"sourcePort\":\"353083bc-2ac6-4819-8a58-30a4f2f423bd\",\"target\":\"5a733cdd-ffd9-46da-93e2-e9511e22bbca\",\"targetPort\":\"eb016879-8d5f-49c9-ba6c-f63b73bc429e\",\"points\":[{\"id\":\"8d3704be-d0d1-4a1f-9255-6e3af60bbcbc\",\"selected\":false,\"x\":627.5253042544024,\"y\":67.37665597156948},{\"id\":\"3b838009-94c4-429d-a1c1-4ea2bb20d880\",\"selected\":false,\"x\":745.5006773465954,\"y\":-43.766274109675905}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#362a18\",\"curvyness\":150},{\"id\":\"d4502b7c-f646-4358-ab84-dd6d753f53a2\",\"type\":\"link\",\"selected\":false,\"source\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"sourcePort\":\"379f9e63-bf38-461a-b633-f2f9ef940909\",\"target\":\"950a90a2-1c57-471b-b9d4-5c47fa01bc9b\",\"targetPort\":\"0c041374-1425-4ad6-8da8-2d2cbb7bc6a3\",\"points\":[{\"id\":\"a711477c-4855-4df5-b041-6e6e094a534e\",\"selected\":false,\"x\":627.5253042544024,\"y\":102.87665532151837},{\"id\":\"e6be6920-0413-4db9-9a12-2f89a2657559\",\"selected\":false,\"x\":758.0767983318797,\"y\":214.00410606064517}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#90875B\",\"curvyness\":150},{\"id\":\"44063c78-1ffa-461b-a2e8-573998d2a34d\",\"type\":\"link\",\"selected\":false,\"source\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"sourcePort\":\"be218528-1266-49e5-8f2e-643e9a6f30ad\",\"target\":\"5128d8eb-dcec-4a07-aa2e-43f0933ea85b\",\"targetPort\":\"bbcf07f1-92a5-4f32-b553-558dcd975212\",\"points\":[{\"id\":\"5c463587-6e04-4ebe-8ccd-3e09746aa5ab\",\"selected\":false,\"x\":650.2187511077093,\"y\":465.0937484340972},{\"id\":\"55dc78bc-ad93-46e2-aa0d-f472f350b45a\",\"selected\":true,\"x\":774.3125213521583,\"y\":389.8750108779327}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#362a18\",\"curvyness\":150},{\"id\":\"fd47e2a8-ada9-45f2-89c0-5e7a352e9a02\",\"type\":\"link\",\"selected\":false,\"source\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"sourcePort\":\"75b632b3-1741-4656-90a2-0e48e49604b0\",\"target\":\"17fc37be-46cc-47f4-a041-ee14d984a7a9\",\"targetPort\":\"b5a03f4c-a2f8-43c6-bf6a-3e319c0652d3\",\"points\":[{\"id\":\"569b056e-3222-4c35-9f2a-2f926a749c48\",\"selected\":false,\"x\":650.2187511077093,\"y\":500.59378260821285},{\"id\":\"c2d6e89b-4528-49a5-b63e-7b01de841e7b\",\"selected\":true,\"x\":777.7343439766115,\"y\":558.7500017772173}],\"extras\":{},\"labels\":[],\"width\":2,\"color\":\"#90875B\",\"curvyness\":150}],\"nodes\":[{\"id\":\"ab77c121-b415-4ecc-9c30-9f65662d9d56\",\"type\":\"start\",\"selected\":false,\"x\":0,\"y\":0,\"extras\":{\"title\":\"Start\"},\"ports\":[{\"id\":\"a7f23ac5-bb6e-4066-b897-826ab9de7e11\",\"type\":\"start\",\"selected\":false,\"name\":\"out\",\"parentNode\":\"ab77c121-b415-4ecc-9c30-9f65662d9d56\",\"links\":[\"0dd1b1e8-406e-46e1-b198-85602f8824eb\"],\"maximumLinks\":1,\"position\":\"out\",\"color\":\"#01a3ce\"}]},{\"id\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"type\":\"request\",\"selected\":false,\"x\":149,\"y\":197.9476367915278,\"extras\":{\"title\":\"Request\",\"request\":{\"port\":\"\",\"url\":\"\",\"method\":\"\",\"headers\":\"\",\"body\":\"\"},\"url\":\"http://www.zup.com.br/\",\"port\":\"80\",\"method\":\"GET\"},\"ports\":[{\"id\":\"7dbe5c86-6ccd-481c-8acf-7b290ee19c41\",\"type\":\"request\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"links\":[\"0dd1b1e8-406e-46e1-b198-85602f8824eb\"],\"position\":\"in\",\"color\":\"#246fc5\"},{\"id\":\"c211e419-8498-4876-972d-8107961bcbd9\",\"type\":\"request\",\"selected\":false,\"name\":\"yes\",\"parentNode\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"links\":[\"8879d879-0c8c-4094-b864-348bf47c2ecc\"],\"maximumLinks\":1,\"position\":\"yes\",\"color\":\"#4a821c\"},{\"id\":\"54dd40e7-8720-4aab-9e80-9470aa5934e2\",\"type\":\"request\",\"selected\":false,\"name\":\"no\",\"parentNode\":\"0ddb8961-d45d-48c6-813f-8dc4d9328cad\",\"links\":[\"faf9e674-58ca-4832-979f-8ba976831807\"],\"maximumLinks\":1,\"position\":\"no\",\"color\":\"#ff3750\"}]},{\"id\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"type\":\"conditional\",\"selected\":false,\"x\":448.51608786336857,\"y\":406.56180083985294,\"extras\":{\"title\":\"Conditional\",\"description\":\"Does the user match all of the following conditions?\",\"conditions\":[{\"id\":1,\"left\":\"3\",\"compare\":\"equal\",\"right\":\"3\"}],\"default\":{\"color\":\"#90875B\"}},\"ports\":[{\"id\":\"ed953688-3b1d-4e93-bcab-d7fc8459e113\",\"type\":\"conditional\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"links\":[\"faf9e674-58ca-4832-979f-8ba976831807\"],\"position\":\"in\",\"color\":\"#246fc5\"},{\"id\":\"be218528-1266-49e5-8f2e-643e9a6f30ad\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-1\",\"parentNode\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"links\":[\"44063c78-1ffa-461b-a2e8-573998d2a34d\"],\"maximumLinks\":1,\"position\":\"out-1\",\"color\":\"#362a18\"},{\"id\":\"75b632b3-1741-4656-90a2-0e48e49604b0\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-default\",\"parentNode\":\"940ac7c2-44c3-4f76-8f44-58d019755ca9\",\"links\":[\"fd47e2a8-ada9-45f2-89c0-5e7a352e9a02\"],\"maximumLinks\":1,\"position\":\"out-default\",\"color\":\"#90875B\"}]},{\"id\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"type\":\"conditional\",\"selected\":false,\"x\":425.82387819229535,\"y\":8.830912661259731,\"extras\":{\"title\":\"Conditional\",\"description\":\"Does the user match all of the following conditions?\",\"conditions\":[{\"id\":1,\"left\":\"1\",\"compare\":\"equal\",\"right\":\"2\"}],\"default\":{\"color\":\"#90875B\"}},\"ports\":[{\"id\":\"c0aee519-2e9f-4fbb-ab16-928db701e0e9\",\"type\":\"conditional\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"links\":[\"8879d879-0c8c-4094-b864-348bf47c2ecc\"],\"position\":\"in\",\"color\":\"#246fc5\"},{\"id\":\"353083bc-2ac6-4819-8a58-30a4f2f423bd\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-1\",\"parentNode\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"links\":[\"4c565e08-9636-46bd-b6c9-108470fa44f2\"],\"maximumLinks\":1,\"position\":\"out-1\",\"color\":\"#362a18\"},{\"id\":\"379f9e63-bf38-461a-b633-f2f9ef940909\",\"type\":\"conditional\",\"selected\":false,\"name\":\"out-default\",\"parentNode\":\"a4d05444-372e-4ad8-a759-e623644995e7\",\"links\":[\"d4502b7c-f646-4358-ab84-dd6d753f53a2\"],\"maximumLinks\":1,\"position\":\"out-default\",\"color\":\"#90875B\"}]},{\"id\":\"5a733cdd-ffd9-46da-93e2-e9511e22bbca\",\"type\":\"createJSON\",\"selected\":false,\"x\":745.5031753813028,\"y\":-61.27664496903435,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"eb016879-8d5f-49c9-ba6c-f63b73bc429e\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"5a733cdd-ffd9-46da-93e2-e9511e22bbca\",\"links\":[\"4c565e08-9636-46bd-b6c9-108470fa44f2\"],\"position\":\"in\",\"color\":\"green\"}]},{\"id\":\"950a90a2-1c57-471b-b9d4-5c47fa01bc9b\",\"type\":\"createJSON\",\"selected\":false,\"x\":758.0902668284818,\"y\":196.50844496429417,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"0c041374-1425-4ad6-8da8-2d2cbb7bc6a3\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"950a90a2-1c57-471b-b9d4-5c47fa01bc9b\",\"links\":[\"d4502b7c-f646-4358-ab84-dd6d753f53a2\"],\"position\":\"in\",\"color\":\"green\"}]},{\"id\":\"5128d8eb-dcec-4a07-aa2e-43f0933ea85b\",\"type\":\"createJSON\",\"selected\":false,\"x\":774.3166306038344,\"y\":372.3753210451779,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"bbcf07f1-92a5-4f32-b553-558dcd975212\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"5128d8eb-dcec-4a07-aa2e-43f0933ea85b\",\"links\":[\"44063c78-1ffa-461b-a2e8-573998d2a34d\"],\"position\":\"in\",\"color\":\"green\"}]},{\"id\":\"17fc37be-46cc-47f4-a041-ee14d984a7a9\",\"type\":\"createJSON\",\"selected\":false,\"x\":777.7399854916243,\"y\":541.2608288428197,\"extras\":{\"title\":\"Create JSON\",\"type\":\"createJSON\",\"values\":\"\"},\"ports\":[{\"id\":\"b5a03f4c-a2f8-43c6-bf6a-3e319c0652d3\",\"type\":\"createJSON\",\"selected\":false,\"name\":\"in\",\"parentNode\":\"17fc37be-46cc-47f4-a041-ee14d984a7a9\",\"links\":[\"fd47e2a8-ada9-45f2-89c0-5e7a352e9a02\"],\"position\":\"in\",\"color\":\"green\"}]}],\"isCanvasMoving\":false}"
								},
								"url": {
									"raw": "http://localhost:3000/graphs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"graphs"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Upload",
					"item": [
						{
							"name": "http://localhost:3000/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5deda8c-acb5-4b4c-8a60-9cc34177571d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"var schema = { \"message\": \"Nothing to show here\" }",
											"pm.test(\"JSON body equals to\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.eql(schema);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/upload",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"upload"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Sample",
					"item": [
						{
							"name": "http://localhost:3000/sample",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea48b65f-a566-4678-9ce1-9bb1bdb17e27",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(pm.environment.get(\"sampleJson\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/sample",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"sample"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://localhost:3000/sampleFriendly",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea48b65f-a566-4678-9ce1-9bb1bdb17e27",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(pm.environment.get(\"sampleFriendlyJson\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/sample?friendlyName=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"sample"
									],
									"query": [
										{
											"key": "friendlyName",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Not Found",
					"item": [
						{
							"name": "http://localhost:3000/notfound Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33843511-6877-426c-853d-b1691ec76612",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"var schema = { \"message\": \"not found\" }",
											"pm.test(\"JSON body equals to\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.eql(schema);",
											"});",
											"",
											"pm.test(\"Response time is less than \" + pm.environment.get(\"acceptableTime\") +\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(parseInt(pm.environment.get(\"acceptableTime\")));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/notfound",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"notfound"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "49ad9c91-25a0-487d-b6d9-1ebc427b3761",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "27c00a7c-c103-4976-8dcc-836902ca418d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}